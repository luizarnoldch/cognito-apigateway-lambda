AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Cognito APIGATEWAY test

Parameters:
  ProjectName:
    Type: String
    Description: Cognito-Test
    Default: Cognito-Test

Resources:
  HelloWorldFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: ../bin/hello.zip
      FunctionName: !Sub "${ProjectName}-hello"
      Handler: bootstrap
      Runtime: provided.al2
      #   - Statement:
      #     - Effect: Allow
      #       Action: connect:*
      #       Resource: "*"
      Events:
        HelloWorld:
          Type: Api 
          Properties:
            Path: /helloWorld
            Method: get
      # Timeout: 900
      # MemorySize: 1024
  
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: app-user-pool
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: verified_email
            Priority: 2
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AutoVerifiedAttributes:
        - email
      MfaConfiguration: "OFF"
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          TemporaryPasswordValidityDays: 7
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: true
      Schema:
        - AttributeDataType: "String"
          Mutable: true
          Name: email
          Required: true
      EmailConfiguration:
          EmailSendingAccount: COGNITO_DEFAULT

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: app-user-pool-client
      GenerateSecret: false
      CallbackURLs: 
        - https://example.com/callback
      # LogoutURLs: 
      #   - String
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
        - implicit
      AllowedOAuthScopes:
        - email
        - openid
        - phone
      SupportedIdentityProviders:
        - COGNITO
      ExplicitAuthFlows:
        - ALLOW_REFRESH_TOKEN_AUTH 
        - ALLOW_USER_SRP_AUTH
      TokenValidityUnits:
        AccessToken: minutes
        IdToken: minutes
        RefreshToken: days
      IdTokenValidity: 60
      AccessTokenValidity: 60
      RefreshTokenValidity: 30
      AuthSessionValidity: 3
      EnableTokenRevocation: true
      PreventUserExistenceErrors: ENABLED

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties: 
      Domain: !Sub "auth-api-test-${AWS::AccountId}"
      UserPoolId: !Ref CognitoUserPool
  
  UserPoolUICustomization:
    Type: AWS::Cognito::UserPoolUICustomizationAttachment
    Properties: 
      ClientId: !Ref CognitoUserPoolClient
      UserPoolId: !Ref CognitoUserPool
      
Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn